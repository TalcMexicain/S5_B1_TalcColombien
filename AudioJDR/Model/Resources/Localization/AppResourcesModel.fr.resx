<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CantEquipWeaponItemFormat" xml:space="preserve">
    <value>Le personnage {0} ne peut pas équiper l'arme {1}</value>
  </data>
  <data name="CharacterCriticalHealth" xml:space="preserve">
    <value>La santé est critique avec seulement {0} points de vie restants !</value>
  </data>
  <data name="CharacterDescriptionFormat" xml:space="preserve">
    <value>Voici des informations sur le personnage de {0}. {1} {2} {3}</value>
  </data>
  <data name="CharacterEquippedWeapon" xml:space="preserve">
    <value>Le personnage utilise une {0}, qui peut infliger {1} points de dégâts</value>
  </data>
  <data name="CharacterHealthStatus" xml:space="preserve">
    <value>{0} points de vie restants</value>
  </data>
  <data name="CharacterInventoryEmpty" xml:space="preserve">
    <value>Son inventaire est vide</value>
  </data>
  <data name="CharacterInventoryItems" xml:space="preserve">
    <value>L'inventaire contient les objets suivants : {0}</value>
  </data>
  <data name="CharacterNoWeapon" xml:space="preserve">
    <value>Le personnage n'a pas d'arme équipée et infligera {0} dégâts de base</value>
  </data>
  <data name="ConsumableItemDescription" xml:space="preserve">
    <value>Ceci est un objet consommable appelé {0}, qui restaure {1} points de vie</value>
  </data>
  <data name="EquippedWeaponItemFormat" xml:space="preserve">
    <value>Le personnage {0} a équipé l'arme {1}</value>
  </data>
  <data name="FileServiceManager_ExportStoryAsync_JsonException" xml:space="preserve">
    <value>Erreur : le fichier n'a pas pu être sérialisé. Message :</value>
  </data>
  <data name="FileServiceManager_ImportStoryAsync_ImportedStoryException" xml:space="preserve">
    <value>Données d'histoire non valides dans le fichier.</value>
  </data>
  <data name="FileServiceManager_ImportStoryAsync_JsonException" xml:space="preserve">
    <value>Erreur : Le fichier ne contient pas d'histoire valide. Message : </value>
  </data>
  <data name="GlobalSettings_VoicRateTTS_ArgumentOutOfRangeException" xml:space="preserve">
    <value>La valeur de réglage du débit de TextToSpeech doit être une valeur flottante comprise entre 0,5 et 2,0.</value>
  </data>
  <data name="GlobalSettings_VolumeTTS_ArgumentOutOfRangeException" xml:space="preserve">
    <value>La valeur du volume de TextToSpeech doit être comprise entre 0 et 100.</value>
  </data>
  <data name="Option_AddWordInList_ArgumentException" xml:space="preserve">
    <value>Le mot à ajouter ne peut pas être vide.</value>
  </data>
  <data name="Option_RemoveWordInList_ArgumentException" xml:space="preserve">
    <value>Le mot à supprimer ne peut pas être vide.</value>
  </data>
  <data name="Story_SetFirstEvent_InvalidOperationException" xml:space="preserve">
    <value>Erreur : L'événement doit appartenir aux événements de l'histoire. Message : </value>
  </data>
  <data name="KeyItemDescription" xml:space="preserve">
    <value>Ceci est un objet clé appelé {0}. Il est utilisé pour débloquer certains chemins</value>
  </data>
  <data name="UnEquippedWeaponItemFormat" xml:space="preserve">
    <value>Le personnage {0} a déséquipé l'arme {1}</value>
  </data>
  <data name="UsedConsumableItemFormat" xml:space="preserve">
    <value>Le personnage {0} a été soigné de {1} points de vie grâce à {2}</value>
  </data>
  <data name="UsedKeyItemFormat" xml:space="preserve">
    <value>Le personnage {0} a utilisé {1}</value>
  </data>
  <data name="WeaponItemDescription" xml:space="preserve">
    <value>Ceci est une arme appelée {0}, qui inflige {1} points de dégâts lorsqu'elle est équipée</value>
  </data>
  <data name="WindowsRecognition_Constructor_Exception" xml:space="preserve">
    <value>Erreur d'initialisation de la reconnaissance vocale : </value>
  </data>
  <data name="CultureInfo" xml:space="preserve">
    <value>fr-FR</value>
  </data>
</root>